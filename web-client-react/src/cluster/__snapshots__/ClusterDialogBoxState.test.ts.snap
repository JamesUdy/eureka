// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cluster dialog box state focused member functionality should select the first matching member and mark it as focused from the search result 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "focusedMember": Member {
    "nodeId": "void onCreate()",
  },
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "void",
  "startNode": null,
}
`;

exports[`Cluster dialog box state focused member functionality should select the first member from the search result when pressing down arrow on the last item 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "focusedMember": Member {
    "nodeId": "void onCreate()",
  },
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "void",
  "startNode": null,
}
`;

exports[`Cluster dialog box state focused member functionality should select the last member from the search result when pressing the up arrow on the first item 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "focusedMember": Member {
    "nodeId": "void onResume()",
  },
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "void",
  "startNode": null,
}
`;

exports[`Cluster dialog box state focused member functionality should select the next member when pressing the down arrow 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "focusedMember": Member {
    "nodeId": "void onPause()",
  },
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "void",
  "startNode": null,
}
`;

exports[`Cluster dialog box state focused member functionality should select the previous member when pressing the up arrow 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "focusedMember": Member {
    "nodeId": "void onCreate()",
  },
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "void",
  "startNode": null,
}
`;

exports[`Cluster dialog box state search start node functionality should filter members based on the search term 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [
    Member {
      "nodeId": "List chrome",
    },
  ],
  "focusedMember": Member {
    "nodeId": "List chrome",
  },
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "chr",
  "startNode": null,
}
`;

exports[`Cluster dialog box state search start node functionality should filter members based on the search term but ignore whitespaces 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [
    Member {
      "nodeId": "List chrome",
    },
  ],
  "focusedMember": Member {
    "nodeId": "List chrome",
  },
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "chr",
  "startNode": null,
}
`;

exports[`Cluster dialog box state search start node functionality should not filter members when the search term has < 2 characters 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [],
  "focusedMember": null,
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "c",
  "startNode": null,
}
`;

exports[`Cluster dialog box state search start node functionality should not filter members when the search term is empty 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [],
  "focusedMember": null,
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "",
  "startNode": null,
}
`;

exports[`Cluster dialog box state search start node functionality should not filter members when the search term only contains spaces 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [],
  "focusedMember": null,
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "",
  "startNode": null,
}
`;

exports[`Cluster dialog box state search start node functionality should not have filtered results for a non-matching search term 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [],
  "focusedMember": null,
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "hello",
  "startNode": null,
}
`;

exports[`Cluster dialog box state should have an initial state 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [],
  "focusedMember": null,
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "",
  "startNode": null,
}
`;

exports[`Cluster dialog box state start node selection should select the currently focused element as the start node 1`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "focusedMember": Member {
    "nodeId": "void onCreate()",
  },
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "void",
  "startNode": Member {
    "nodeId": "void onCreate()",
  },
}
`;

exports[`Cluster dialog box state start node selection should select the currently focused element as the start node 2`] = `
ClusterDialogBoxState {
  "filteredMembers": Array [
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "focusedMember": Member {
    "nodeId": "void onCreate()",
  },
  "members": Array [
    Member {
      "nodeId": "List chrome",
    },
    Member {
      "nodeId": "void onCreate()",
    },
    Member {
      "nodeId": "void onPause()",
    },
    Member {
      "nodeId": "void onResume()",
    },
  ],
  "searchTerm": "void",
  "startNode": null,
}
`;
